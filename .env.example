# Environment application is running in.
# can be either:
# production: debug is off, logs are structured json
# development: debug is on, logs are structured text
LOGGER_ENV=development

# Set Sentry connection details provided by sentry.io or self hosted sentry.
# Optional.
# LOGGER_SENTRY_DSN=

# URL prefix for GopherCI to refer back to itself, without trailing slash.
GCI_BASE_URL=https://gci.gopherci.io

# GitHub Integration ID provided when creating the integration
GITHUB_ID=

# GitHub Integration private key provided when creating the integration
GITHUB_PEM_FILE=private-key.pem

# GetHub Integration webhook secret https://developer.github.com/webhooks/securing/
GITHUB_WEBHOOK_SECRET=

# Database details, create with:
# CREATE DATABASE gopherci
# GRANT ALL PRIVILEGES ON gopherci.* TO 'gopherci'@'%' IDENTIFIED BY 'password';
DB_DRIVER=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=gopherci
DB_USERNAME=gopherci
DB_PASSWORD=

# Analyser provides an environment to execute commands
# can be either: docker or filesystem
# Note: filesystem is not recommended, and provided for legacy purposes only
# as the canonical docker image provides additional dependencies that the
# filesystem analyser required, see https://github.com/gopherci/gopherci-env
ANALYSER=docker

# Limit the maximum memory usage of commands executing during an analysis
# Values are in MiB. If this value is too small, some commands may fail with
# unexpected error messages.
#ANALYSER_MEMORY_LIMIT=

# Path for the File System Analyser, this should be a separate GOPATH
# compatible structure just for CI purposes.
# Required if ANALYSER=filesystem
#ANALYSER_FILESYSTEM_PATH=/tmp/gopherci

# Container image to use for Docker analyser, must already exist
# Optional if ANALYSER=docker
#ANALYSER_DOCKER_IMAGE=gopherci/gopherci-env:latest

# For docker connection settings:
# https://godoc.org/github.com/docker/docker/client#NewEnvClient
# Optional if ANALYSER=docker
#DOCKER_HOST=
#DOCKER_CERT_PATH=
#DOCKER_TLS_VERIFY=

# Queuer provides a queue for sending and receiver ci jobs
# can be either: memory or gcppubsub
QUEUER=gcppubsub

# Name of the GCP Project for GCPPUBSUB
# Required if QUEUER=gcppubsub
QUEUER_GCPPUBSUB_PROJECT_ID=gopherci-dev

# Name of the GCP PubSub topic for GCPPUBSUB, it will be created if it does not
# exist.
# Optional if QUEUER=gcppubsub
QUEUER_GCPPUBSUB_TOPIC=

# The following are used for integration tests, see also CONTRIBUTING.md.
#
# Owner and repository. Required if running integration tests.
#INTEGRATION_GITHUB_OWNER=test-user
#INTEGRATION_GITHUB_REPO=test-repo
#
# Personal Access Token with the scope repo see https://github.com/settings/tokens.
# Required if running integration tests.
#INTEGRATION_GITHUB_PAT=abc123
#
# To use a different SSH key (likely required if using a test GitHub user). Optional.
# Optional if running integration tests.
#INTEGRATION_GITHUB_KEY_FILE=~/.ssh/test-user
#
# PATH containing Git 2.3+.
# Optional if running integration tests.
#INTEGRATION_PATH=/usr/local/bin:/usr/bin
