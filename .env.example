# GitHub Integration ID provided when creating the integration
GITHUB_ID=

# GitHub Integration private key provided when creating the integration
GITHUB_PEM_FILE=private-key.pem

# GetHub Integration webhook secret https://developer.github.com/webhooks/securing/
GITHUB_WEBHOOK_SECRET=

# Database details, create with:
# CREATE DATABASE gopherci
# GRANT ALL PRIVILEGES ON gopherci.* TO 'gopherci'@'%' IDENTIFIED BY 'password';
DB_DRIVER=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=gopherci
DB_USERNAME=gopherci
DB_PASSWORD=

# Analyser provides an environment to execute commands
# can be either: docker or filesystem
# Note: filesystem is not recommended, and provided for legacy purposes only
# as the canonical docker image provides additional dependencies that the
# filesystem analyser required, see https://github.com/gopherci/gopherci-env
ANALYSER=docker

# Path for the File System Analyser, this should be a separate GOPATH
# compatible structure just for CI purposes.
# Required if ANALYSER=filesystem
#ANALYSER_FILESYSTEM_PATH=/tmp/gopherci

# Container image to use for Docker analyser, must already exist
# Optional if ANALYSER=docker
#ANALYSER_DOCKER_IMAGE=gopherci/gopherci-env:latest

# For docker connection settings:
# https://godoc.org/github.com/docker/docker/client#NewEnvClient
# Optional if ANALYSER=docker
#DOCKER_HOST=
#DOCKER_CERT_PATH=
#DOCKER_TLS_VERIFY=

# Queuer provides a queue for sending and receiver ci jobs
# can be either: memory or gcppubsub
QUEUER=gcppubsub

# Name of the GCP Project for GCPPUBSUB
# Required if QUEUER=gcppubsub
QUEUER_GCPPUBSUB_PROJECT_ID=gopherci-dev

# Name of the GCP PubSub topic for GCPPUBSUB, it will be created if it does not
# exist.
# Optional if QUEUER=gcppubsub
QUEUER_GCPPUBSUB_TOPIC=
